{"ast":null,"code":"// store/todosSlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchTodos = createAsyncThunk(\"todo/fetchTodos\", async () => {\n  const res = await fetch(\"http://localhost:3001/todos\");\n  return await res.json();\n});\nexport const addTodo = createAsyncThunk(\"todo/addTodo\", async text => {\n  const res = await fetch(\"http://localhost:3001/todos\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      text,\n      completed: false\n    })\n  });\n  return await res.json();\n});\nexport const toggleTodo = createAsyncThunk(\"todo/toggleTodo\", async todo => {\n  const res = await fetch(`http://localhost:3001/todos/${todo.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      completed: !todo.completed\n    })\n  });\n  return await res.json();\n});\nexport const deleteTodo = createAsyncThunk(\"todo/deleteTodo\", async id => {\n  await fetch(`http://localhost:3001/todos/${id}`, {\n    method: \"DELETE\"\n  });\n  return id;\n});\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [],\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.fulfilled, (_, action) => action.payload).addCase(addTodo.fulfilled, (state, action) => void state.push(action.payload)).addCase(toggleTodo.fulfilled, (state, action) => state.map(todo => todo.id === action.payload.id ? action.payload : todo)).addCase(deleteTodo.fulfilled, (state, action) => state.filter(todo => todo.id !== action.payload));\n  }\n});\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchTodos","res","fetch","json","addTodo","text","method","headers","body","JSON","stringify","completed","toggleTodo","todo","id","deleteTodo","todoSlice","name","initialState","extraReducers","builder","addCase","fulfilled","_","action","payload","state","push","map","filter","reducer"],"sources":["C:/Users/lekyl/OneDrive/Desktop/Projects/react05052025/learning/react/ReduxTodo/src/store/todoSlice.jsx"],"sourcesContent":["// store/todosSlice.js\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchTodos = createAsyncThunk(\"todo/fetchTodos\", async () => {\r\n  const res = await fetch(\"http://localhost:3001/todos\");\r\n  return await res.json();\r\n});\r\n\r\nexport const addTodo = createAsyncThunk(\"todo/addTodo\", async (text) => {\r\n  const res = await fetch(\"http://localhost:3001/todos\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ text, completed: false }),\r\n  });\r\n  return await res.json();\r\n});\r\n\r\nexport const toggleTodo = createAsyncThunk(\"todo/toggleTodo\", async (todo) => {\r\n  const res = await fetch(`http://localhost:3001/todos/${todo.id}`, {\r\n    method: \"PATCH\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ completed: !todo.completed }),\r\n  });\r\n  return await res.json();\r\n});\r\n\r\nexport const deleteTodo = createAsyncThunk(\"todo/deleteTodo\", async (id) => {\r\n  await fetch(`http://localhost:3001/todos/${id}`, {\r\n    method: \"DELETE\",\r\n  });\r\n  return id;\r\n});\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: [],\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTodos.fulfilled, (_, action) => action.payload)\r\n      .addCase(\r\n        addTodo.fulfilled,\r\n        (state, action) => void state.push(action.payload)\r\n      )\r\n      .addCase(toggleTodo.fulfilled, (state, action) =>\r\n        state.map((todo) =>\r\n          todo.id === action.payload.id ? action.payload : todo\r\n        )\r\n      )\r\n      .addCase(deleteTodo.fulfilled, (state, action) =>\r\n        state.filter((todo) => todo.id !== action.payload)\r\n      );\r\n  },\r\n});\r\n\r\nexport default todoSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CAAC,iBAAiB,EAAE,YAAY;EACxE,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EACtD,OAAO,MAAMD,GAAG,CAACE,IAAI,CAAC,CAAC;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAGL,gBAAgB,CAAC,cAAc,EAAE,MAAOM,IAAI,IAAK;EACtE,MAAMJ,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;IACrDI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL,IAAI;MAAEM,SAAS,EAAE;IAAM,CAAC;EACjD,CAAC,CAAC;EACF,OAAO,MAAMV,GAAG,CAACE,IAAI,CAAC,CAAC;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMS,UAAU,GAAGb,gBAAgB,CAAC,iBAAiB,EAAE,MAAOc,IAAI,IAAK;EAC5E,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+BW,IAAI,CAACC,EAAE,EAAE,EAAE;IAChER,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,SAAS,EAAE,CAACE,IAAI,CAACF;IAAU,CAAC;EACrD,CAAC,CAAC;EACF,OAAO,MAAMV,GAAG,CAACE,IAAI,CAAC,CAAC;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMY,UAAU,GAAGhB,gBAAgB,CAAC,iBAAiB,EAAE,MAAOe,EAAE,IAAK;EAC1E,MAAMZ,KAAK,CAAC,+BAA+BY,EAAE,EAAE,EAAE;IAC/CR,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAOQ,EAAE;AACX,CAAC,CAAC;AAEF,MAAME,SAAS,GAAGlB,WAAW,CAAC;EAC5BmB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,UAAU,CAACsB,SAAS,EAAE,CAACC,CAAC,EAAEC,MAAM,KAAKA,MAAM,CAACC,OAAO,CAAC,CAC5DJ,OAAO,CACNjB,OAAO,CAACkB,SAAS,EACjB,CAACI,KAAK,EAAEF,MAAM,KAAK,KAAKE,KAAK,CAACC,IAAI,CAACH,MAAM,CAACC,OAAO,CACnD,CAAC,CACAJ,OAAO,CAACT,UAAU,CAACU,SAAS,EAAE,CAACI,KAAK,EAAEF,MAAM,KAC3CE,KAAK,CAACE,GAAG,CAAEf,IAAI,IACbA,IAAI,CAACC,EAAE,KAAKU,MAAM,CAACC,OAAO,CAACX,EAAE,GAAGU,MAAM,CAACC,OAAO,GAAGZ,IACnD,CACF,CAAC,CACAQ,OAAO,CAACN,UAAU,CAACO,SAAS,EAAE,CAACI,KAAK,EAAEF,MAAM,KAC3CE,KAAK,CAACG,MAAM,CAAEhB,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKU,MAAM,CAACC,OAAO,CACnD,CAAC;EACL;AACF,CAAC,CAAC;AAEF,eAAeT,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}